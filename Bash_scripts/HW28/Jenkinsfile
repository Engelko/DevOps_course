pipeline {
  agent any
    parameters {
    string(name: 'PATHTO', defaultValue: 'Bash_scripts/HW27', description: null)
    string(name: 'VERSION', defaultValue: 'v1', description: null)
    string(name: 'IMG_NAME', defaultValue: 'hw28', description: null)
    string(name: 'USR_REPO', defaultValue: 'engelko', description: null)
    string(name: 'PATH_DOCKERFILE', defaultValue: 'Bash_scripts/HW27/Dockerfile', description: null)
  }
  stages {
    stage('Shell script 0') {
      steps {
        sh '''
        cd $PATHTO
        SHELL_SCRIPTS=$(find . -name \'*.sh\')
        for var in $SHELL_SCRIPTS ; do
        shellcheck "$var"
        done
        '''
      }
    }    
    stage('Shell script 1') {
      steps {
        sh '''
        dockerfile_lint  -f ${PATH_DOCKERFILE}
        '''
      }
    } 
    stage('Push images') {
      steps {
        script {
          def dockerImage = docker.build("${USR_REPO}/${IMG_NAME}", "-f ${PATH_DOCKERFILE} .")
          docker.withRegistry('', 'dockerhub') {
          dockerImage.push("${VERSION}_${GIT_COMMIT}_${BUILD_NUMBER}")
          }
          echo "Pushed Docker Image: ${USR_REPO}/${IMG_NAME}"
        } 
          sh "docker rmi ${USR_REPO}/${IMG_NAME}:${VERSION}_${GIT_COMMIT}_${BUILD_NUMBER} "
        }
    }   
  }
}
