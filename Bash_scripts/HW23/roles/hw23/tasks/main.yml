# Create file /opt/hw23_test_file in remote hosts
- name: "Touch file in remote hosts"
  copy:
    content: "{{ item.content }}"
    dest: "{{ item.dest }}"
    force: no
    group: "{{ item.group }}"
    owner: "{{ item.owner }}"
    mode: "{{ item.mode }}"
  loop: "{{ cr_file }}"
  become: true

# Rename file /opt/hw23_test_file if it exists, if not then issue a message
- name: "Rename file /opt/hw23_test_file"
  block:
    - name: "stat for file /opt/hw23_test_file"
      stat: path=/opt/hw23_test_file
      register: file_stat

    - name: "Debug message"
      debug:
       msg: "File /opt/hw23_test_file not found"
      when: file_stat.stat.exists == False

    - name: "Rename File /opt/hw23_test_file"
      command: mv  /opt/hw23_test_file /opt/hw23_test_file_exists
      when: file_stat.stat.exists
  become: true

# Create symbolic link /opt/hw23_link to /etc/hosts
- name: "Create symlink"
  file:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    state: link
  with_items:
    - "{{ symlink }}"
  become: true

# Rename link /opt/hw23_link if it exists, if not then issue a message
- name: "Rename link /opt/hw23_link"
  block:
    - name: "stat for link /opt/hw23_link"
      stat: path=/opt/hw23_link
      register: link_stat

    - name: "Debug message"
      debug:
       msg: "Link /opt/hw23_link not found"
      when: link_stat.stat.exists == False

    - name: "Rename link /opt/hw23_link"
      command: mv  /opt/hw23_link /opt/hw23_test_file_link
      when: link_stat.stat.exists
  become: true

#Install Docker,Git,Pyhton,Nginx
- name: "Install Packages"
  import_tasks: hw23_1.yml
  become: true 
  tags: t3a

# Tasks hw23_t3_b
- name: "Testing Vareables" 
  block:
   - name: "hw23_3 rc=0"
     set_fact: rc=0
     when: ansible_facts['os_family'] == "Debian"

   - name: "hw23_3 rc=2"
     set_fact: rc=2
     when: ansible_facts['os_family'] == "RedHat"

   - name: "testing rc"
     debug:
       msg: "hw23_3 rc={{ rc }}"
     when: rc != 0     

# Check IP address hosts
- name: "Find out hosts ip"
  set_fact: iphosts={{ lookup('dig', ansible_host) }}


# Check nginx and restarted when not working
- name: "Testing nginx configs" 
  block:
   - name: "Check Nginx configs"
     shell: "/usr/sbin/nginx -t"
     register: nginx_config_status
     become: true
   
   - name: "Nginx test status"
     debug:
       msg: "Nginx Config OK because rc={{ nginx_config_status.rc }}"

   - name: "Nginx test url"
     debug:
      msg: "{{ lookup('url', 'http://{{ iphosts }}') }}"
     register: urlcheck
     ignore_errors: yes
     no_log: true

   - name: "Nginx restarted"
     ansible.builtin.service:
        name: "{{ nginx }}"
        state: restarted
        enabled: yes
     become: true
     when: "not 'Welcome to' in urlcheck.msg"
   
   - name: "Print 20 strings ngnix logs"
     ansible.builtin.shell: sudo tail -n 20 /var/log/nginx/error.log
     register: printlogsnginx
     when: "not 'Welcome to' in urlcheck.msg"
     become: true
   - name: print logs
     debug:
       msg: "{{ printlogsnginx.stdout_lines }}"
     when: "not 'Welcome to' in urlcheck.msg"
